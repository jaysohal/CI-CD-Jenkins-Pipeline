pipeline {
    agent any

    tools{
        maven 'maven-3.9'
    }

    stages {
        stage('Delete Previous Builds') {
            steps {
                echo '***********************************************************************************************'
                echo '-----------------------------DELETING PREVIOUS BUILDS-----------------------------------------'
                sh 'rm -rf /var/lib/jenkins/workspace/build_and_park/*'
                echo 'Previous builds deleted'
            }
        }
        stage('Git checkout') {
            steps {
                echo '****************************************************************'
                echo 'Checkout code started from Github'
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/jaysohal/CI-CD-Jenkins-Pipeline.git']])
                echo 'Checkout code done from Github'
            }
        }
        stage('Build Maven App') {
            steps {
                echo '****************************************************************'
                echo 'Starting Build Maven'
                sh 'mvn clean install'
                echo 'Maven build done'
            }
        }
        stage('Generate sonarqube analysis') {
            steps {
                echo '****************************************************************'
                echo 'Starting sonarqube analysis'
                withSonarQubeEnv(installationName: 'sonarqube-8', credentialsId: 'jenkins-sonar-access') {
                    sh 'mvn sonar:sonar'
                }
                echo 'Sonarqube analysis done'
            }
        }
        stage('Upload artifacts to nexus') {
            steps {
                echo '****************************************************************'
                echo 'Uploading artifacts to nexus'
                
                nexusArtifactUploader artifacts: 
                [
                    [
                        artifactId: 'HelloWorldWebApp', 
                        classifier: '', 
                        file: 'target/HelloWorldWebApp-1.0-SNAPSHOT.war', 
                        type: 'war'
                        ]
                ], 
                credentialsId: 'jenkins-nexus-access', 
                groupId: 'com.example', 
                nexusUrl: '15.157.10.88:8081/', 
                nexusVersion: 'nexus3', 
                protocol: 'http', 
                repository: 'HelloWorldWebApp', 
                version: '1.0-SNAPSHOT'
                
                echo 'Artifacts uploaded to nexus'
            }
        }
        stage('Deploy to Tomcat') {
            steps {
                echo '****************************************************************'
                echo 'Deploying the application to tomcat server'
                sshagent(['jenkins-tomcat_ssh-access']) {
                    sh """
                    scp -o StrictHostKeyChecking=no target/*.war ubuntu@35.182.59.183:/opt/tomcat-9/webapps
                    ssh -o StrictHostKeyChecking=no ubuntu@35.182.59.183 /opt/tomcat-9/bin/shutdown.sh
                    ssh -o StrictHostKeyChecking=no ubuntu@35.182.59.183 /opt/tomcat-9/bin/startup.sh	
		          """
                }
                
                echo 'Deployed to tomcat server'
            }
        }
    }
}
